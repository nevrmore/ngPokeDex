{"version":3,"sources":["app.config.js","app.module.js","home/home.controller.js","pokemonDetails/pokemon.controller.js","pokemonDetails/evolution/evolution.component.js","pokemonDetails/stats/stats.component.js","shared.module.js","filters/ucFirst.filter.js","header/header.component.js","core.module.js","pokemon.service.js"],"names":["config","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","window","angular","module","HomeController","Pokemon","homeVm","this","addPokemonToLocalStorage","newP","pokemons","find","pokemon","id","push","addPokemonToCache","loading","pokemonIndex","getPokemons","fromIndex","toIndex","index","pokemonId","getPokemonById","then","pokemonData","data","idForImage","slice","name","abilities","base_experience","height","weight","descriptionUrl","species","url","types","array","key","sort","a","b","x","y","sortArrayByKey","stats","newPokemon","$inject","PokemonDetailsController","$routeParams","$location","pokeDetailsVm","flavor_text","pokemonDetails","getPokemonByIdLocal","path","getPokemonSpecies","response","console","log","flavorText","flavor_text_entries","genera","genus","onInit","component","template","filter","input","split","map","ch","charAt","toUpperCase","substring","join","appHeaderVm","appName","showAboutUs","toggleAboutUs","$http","apiUrl","get","catch","requestFailed","requestComplete","getCachedPokemons","parseInt","length","pokemonObj","error","factory"],"mappings":"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","file":"app.min.js","sourcesContent":["angular\r\n  .module('ngPokedex')\r\n  .config(config);\r\n\r\nfunction config($routeProvider) {\r\n  $routeProvider\r\n    .when('/pokemons', {\r\n      templateUrl: 'src/modules/home/home.view.html',\r\n      controller: 'HomeController',\r\n      controllerAs: 'homeVm'\r\n    })\r\n    .when('/pokemons/:id', {\r\n      templateUrl: 'src/modules/pokemonDetails/pokemonDetails.view.html',\r\n      controller: 'PokemonDetailsController',\r\n      controllerAs: 'pokeDetailsVm'\r\n    })\r\n    .otherwise('/pokemons');\r\n}\r\n","(function (angular) {\r\n    'use strict';\r\n    angular.module('ngPokedex', [\r\n        'ngRoute',\r\n        'ui.bootstrap',\r\n        'ui.bootstrap.tpls',\r\n        'core',\r\n        'shared'\r\n    ]);\r\n})(window.angular);\r\n","(function (angular) {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('ngPokedex')\r\n    .controller('HomeController', HomeController);\r\n\r\n  HomeController.$inject = ['Pokemon'];\r\n\r\n  function HomeController(Pokemon) {\r\n    var homeVm = this;\r\n\r\n    /** {Boolean} Flag to mantain the status of busy indicator */\r\n    homeVm.loading = false;\r\n\r\n    /** {Integer} The beginning of the offset to get pokemons data */\r\n    homeVm.pokemonIndex = 1;\r\n\r\n    /** {Array<objects>} Stores the data of pokemons */\r\n    homeVm.pokemons = [];\r\n\r\n    // method bindings\r\n    homeVm.getPokemons = getPokemons;\r\n\r\n    onInit();\r\n    function onInit() {\r\n      // start the loading indicator\r\n      homeVm.loading = true;\r\n      return homeVm.getPokemons(homeVm.pokemonIndex, homeVm.pokemonIndex + 10);\r\n    }\r\n\r\n    /**\r\n     * Lopps through the given index range calls `getPokemonById` method for each loop\r\n     * @param {Integer} fromIndex The start of the offset for the API\r\n     * @param {Integer} toIndex   The end of the offset for the API\r\n     */\r\n    function getPokemons(fromIndex, toIndex) {\r\n      fromIndex = fromIndex ? fromIndex : 1;\r\n      toIndex = toIndex ? toIndex : fromIndex + 10;\r\n      for (var index = fromIndex; index < toIndex; index++) {\r\n        getPokemonById(index)\r\n          .then(function (newPokemon) {\r\n            if (newPokemon) {\r\n              addPokemonToLocalStorage(newPokemon);\r\n              homeVm.pokemonIndex++;\r\n            }\r\n          });\r\n      }\r\n      homeVm.loading = false;\r\n    }\r\n\r\n    function addPokemonToLocalStorage(newP) {\r\n      var doesPokemonAlreadyExists = homeVm.pokemons.find(function (pokemon) {\r\n        return newP.id === pokemon.id;\r\n      });\r\n\r\n      if (!doesPokemonAlreadyExists) {\r\n        homeVm.pokemons.push(newP);\r\n        Pokemon.addPokemonToCache(newP);\r\n      }\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Sorts any array based on the given key name\r\n     * @param {Array} array The array to sort\r\n     * @param {String} key  The name of the key based on which the `array` is to be sorted\r\n     */\r\n    function sortArrayByKey(array, key) {\r\n      if (array == null) return;\r\n      return array.sort(function (a, b) {\r\n        var x = a[key];\r\n        var y = b[key];\r\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Brings all details of a pokemon based on given indentification number\r\n     * @param {Integer} pokemonId The ID of the pokemon whose information is to be fetched\r\n     */\r\n    function getPokemonById(pokemonId) {\r\n      return Pokemon.getPokemonById(pokemonId)\r\n        .then(function (pokemonData) {\r\n          if (!pokemonData) {\r\n            return null;\r\n          }\r\n\r\n          return {\r\n            id: pokemonData.data.id,\r\n            idForImage: ('000' + pokemonData.data.id).slice(-3),\r\n            name: pokemonData.data.name,\r\n            abilities: pokemonData.data.abilities,\r\n            base_experience: pokemonData.data.base_experience,\r\n            height: pokemonData.data.height,\r\n            weight: pokemonData.data.weight,\r\n            descriptionUrl: pokemonData.data.species.url,\r\n            types: sortArrayByKey(pokemonData.data.types, 'slot'),\r\n            stats: pokemonData.data.stats\r\n          };\r\n        });\r\n    }\r\n  }\r\n})(window.angular);","(function (angular) {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('ngPokedex')\r\n    .controller('PokemonDetailsController', PokemonDetailsController);\r\n\r\n  PokemonDetailsController.$inject = ['$routeParams', '$location', 'Pokemon'];\r\n\r\n  function PokemonDetailsController($routeParams, $location, Pokemon) {\r\n    var pokeDetailsVm = this;\r\n\r\n    pokeDetailsVm.flavor_text = null;\r\n\r\n    pokeDetailsVm.pokemonId = $routeParams.id;\r\n    pokeDetailsVm.pokemonDetails = null;\r\n\r\n    onInit();\r\n    function onInit() {\r\n\r\n      pokeDetailsVm.pokemonDetails = Pokemon.getPokemonByIdLocal(pokeDetailsVm.pokemonId);\r\n\r\n      // pokemon not found\r\n      if (pokeDetailsVm.pokemonDetails == null) {\r\n        $location.path('pokemons');\r\n        return;\r\n      }\r\n\r\n      if (!pokeDetailsVm.pokemonId) {\r\n        pokeDetailsVm.pokemonId = 1;\r\n      }\r\n      return getPokemonSpecies(\"https://pokeapi.co/api/v2/pokemon-species/\" + pokeDetailsVm.pokemonId)\r\n        .then(function (response) {\r\n          pokeDetailsVm.pokemonDetails.flavorText = response.flavor_text_entries[1].flavor_text || \"Not Found\";\r\n          pokeDetailsVm.pokemonDetails.genera = response.genera[2].genus;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calls the API url given in the parameter. Returns the description (flavor_text) only from the response\r\n     * @param {String} url The API url from where the data is to fetched\r\n     */\r\n    function getPokemonSpecies(url) {\r\n      return Pokemon.getPokemonSpecies(url)\r\n        .then(function (response) {\r\n          console.log(response);\r\n          return response.data;\r\n        });\r\n    }\r\n  }\r\n})(window.angular);","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('ngPokedex')\r\n        .component('pokemonEvolution', {\r\n            template: \"<div class='col-sm text-center'>Work in progress</div>\",\r\n        });\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('ngPokedex')\r\n        .component('pokemonStats', {\r\n            template: \"<div class='col-sm text-center'>Work in progress</div>\"\r\n        });\r\n})();","(function (angular) {\r\n    'use strict';\r\n\r\n    angular.module('shared', []);\r\n\r\n})(window.angular);","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc filter\r\n     * @name ucfirst\r\n     * @kind function\r\n     *\r\n     * @description Converts first character of a string to uppercase\r\n     * \r\n     * @Usage\r\n     * <div>{{ 'string' | ucfirst }}</div>\r\n     * \r\n     * @Output\r\n     * <div>String<div>\r\n     */\r\n    angular.module('shared')\r\n        .filter('ucfirst', ucfirstFilter);\r\n\r\n    function ucfirstFilter() {\r\n        return function (input) {\r\n            if (!input) return;\r\n            return input\r\n                .split(' ')\r\n                .map(function (ch) {\r\n                    return ch.charAt(0).toUpperCase() + ch.substring(1);\r\n                })\r\n                .join(' ');\r\n        }\r\n    }\r\n})();","(function (angular) {\r\n\r\n  'use strict';\r\n\r\n  function AppHeaderController() {\r\n    var appHeaderVm = this;\r\n    appHeaderVm.appName = 'ngPokedex';\r\n    appHeaderVm.showAboutUs = false;\r\n\r\n    appHeaderVm.toggleAboutUs = toggleAboutUs;\r\n\r\n    function toggleAboutUs() {\r\n      return appHeaderVm.showAboutUs = !appHeaderVm.showAboutUs;\r\n    };\r\n  }\r\n\r\n  angular\r\n    .module('shared')\r\n    .component('appHeader', {\r\n      templateUrl: 'src/shared/header/header.view.html',\r\n      controller: AppHeaderController,\r\n      controllerAs: 'appHeaderVm'\r\n    });\r\n\r\n})(window.angular);","(function (angular) {\r\n    'use strict';\r\n    angular.module('core', []);\r\n})(window.angular);","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('core')\r\n    .factory('Pokemon', Pokemon);\r\n\r\n  Pokemon.$inject = ['$http'];\r\n\r\n  function Pokemon($http) {\r\n\r\n    var pokemons = [];\r\n\r\n    return {\r\n      // getPokemonsByOffset: getPokemonsByOffset,\r\n      getPokemonById: getPokemonById,\r\n      getPokemonSpecies: getPokemonSpecies,\r\n      getCachedPokemons: getCachedPokemons,\r\n      getPokemonByIdLocal: getPokemonByIdLocal,\r\n      addPokemonToCache: addPokemonToCache\r\n    };\r\n\r\n    function addPokemonToCache(pokemonObj) {\r\n      if (pokemonObj) {\r\n\r\n        var thisPokemonExists = pokemons.find(function (pokemon) {\r\n          return pokemon.id === pokemonObj.id;\r\n        });\r\n\r\n        !thisPokemonExists ? pokemons.push(pokemonObj) : null;\r\n      }\r\n      return;\r\n    }\r\n\r\n    function getCachedPokemons() {\r\n      return pokemons;\r\n    }\r\n\r\n    function getPokemonSpecies(url) {\r\n      if (!url) return;\r\n\r\n      return $http.get(url)\r\n        .then(requestComplete)\r\n        .catch(requestFailed);\r\n    }\r\n\r\n    function getPokemonByIdLocal(id) {\r\n      id = parseInt(id, 10);\r\n      \r\n      if (pokemons.length < 1) {\r\n        return null;\r\n      }\r\n\r\n      var searchedPokemon = pokemons.filter(function (pokemon) {\r\n        return id === pokemon.id;\r\n      });\r\n\r\n      return searchedPokemon[0];\r\n    }\r\n\r\n    function getPokemonById(id) {\r\n      if (!id) return;\r\n\r\n      var apiUrl = \"https://pokeapi.co/api/v2/pokemon/\" + id + \"/\";\r\n     \r\n      return $http.get(apiUrl)\r\n        .then(function (response) {\r\n          return response;\r\n        })\r\n        .catch(requestFailed);\r\n    }\r\n\r\n    /**\r\n     * Get the list of pokemons based on offset\r\n     * @param {Integer} offset The offset from where to start getting the data\r\n     */\r\n    // function getPokemonsByOffset(url) {\r\n    //   var apiUrl = url || \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=12\";\r\n\r\n    //   return $http.get(apiUrl)\r\n    //     .then(requestComplete)\r\n    //     .catch(requestFailed);\r\n    // }\r\n\r\n    function requestComplete(response) {\r\n      return response;\r\n    }\r\n\r\n    function requestFailed(error) {\r\n      console.log('XHR Failed for getPokemons.' + error.data);\r\n    }\r\n  }\r\n})();"]}