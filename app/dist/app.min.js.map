{"version":3,"sources":["app.config.js","app.module.js","home/home.controller.js","pokemon/pokemon.controller.js","shared.module.js","filters/ucFirst.filter.js","header/header.component.js","core.module.js","pokemon.service.js"],"names":["config","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","window","angular","module","HomeController","Pokemon","homeVm","this","loading","pokemonIndex","pokemons","getPokemons","fromIndex","toIndex","index","pokemonId","getPokemonById","then","pokemonData","newPokemon","id","data","idForImage","slice","name","abilities","base_experience","height","weight","descriptionUrl","species","url","types","array","key","sort","a","b","x","y","sortArrayByKey","stats","push","addPokemonToCache","$inject","PokemonController","$routeParams","pVm","flavor_text","pokemonDetails","ability","is_hidden","slot","type","base_stat","effort","stat","console","log","getPokemonSpecies","response","flavorText","flavor_text_entries","genera","genus","onInit","filter","input","split","map","ch","charAt","toUpperCase","substring","join","component","appHeaderVm","appName","showAboutUs","toggleAboutUs","$http","apiUrl","get","catch","requestFailed","requestComplete","getCachedPokemons","getPokemonByIdLocal","parseInt","length","pokemon","pokemonObj","error","factory"],"mappings":"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","file":"app.min.js","sourcesContent":["angular\r\n  .module('ngPokedex')\r\n  .config(config);\r\n\r\nfunction config($routeProvider) {\r\n  $routeProvider\r\n    .when('/pokemons', {\r\n      templateUrl: 'src/components/home/home.view.html',\r\n      controller: 'HomeController',\r\n      controllerAs: 'homeVm'\r\n    })\r\n    .when('/pokemons/:id', {\r\n      templateUrl: 'src/components/pokemon/pokemon.view.html',\r\n      controller: 'PokemonController',\r\n      controllerAs: 'pVm'\r\n    })\r\n    .otherwise('/pokemons');\r\n}\r\n","(function (angular) {\r\n    'use strict';\r\n    angular.module('ngPokedex', [\r\n        'ngRoute',\r\n        'ui.bootstrap',\r\n        'core',\r\n        'shared'\r\n    ]);\r\n})(window.angular);\r\n","(function (angular) {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('ngPokedex')\r\n    .controller('HomeController', HomeController);\r\n\r\n  HomeController.$inject = ['Pokemon'];\r\n\r\n  function HomeController(Pokemon) {\r\n    var homeVm = this;\r\n\r\n    /** {Boolean} Flag to mantain the status of busy indicator */\r\n    homeVm.loading = false;\r\n    /** {Integer} The beginning of the offset to get pokemons data */\r\n    homeVm.pokemonIndex = 1;\r\n    /** {Array<objects>} Stores the data of pokemons */\r\n    homeVm.pokemons = [];\r\n    \r\n    // method bindings\r\n    homeVm.getPokemons = getPokemons;\r\n\r\n    onInit();\r\n    function onInit() {\r\n      // start the loading indicator\r\n      homeVm.loading = true;\r\n      return homeVm.getPokemons(homeVm.pokemonIndex, homeVm.pokemonIndex + 9);\r\n    }\r\n\r\n    /**\r\n     * Lopps through the given index range calls `getPokemonById` method for each loop\r\n     * @param {Integer} fromIndex The start of the offset for the API\r\n     * @param {Integer} toIndex   The end of the offset for the API\r\n     */\r\n    function getPokemons(fromIndex, toIndex) {\r\n      fromIndex = fromIndex ? fromIndex : 1;\r\n      toIndex = toIndex ? toIndex : fromIndex + 9;\r\n      for (var index = fromIndex; index < toIndex; index++) {\r\n        getPokemonById(index);\r\n        homeVm.pokemonIndex++;\r\n      }\r\n      homeVm.loading = false;\r\n    }\r\n\r\n    /**\r\n     * Sorts any array based on the given key name\r\n     * @param {Array} array The array to sort\r\n     * @param {String} key  The name of the key based on which the `array` is to be sorted\r\n     */\r\n    function sortArrayByKey(array, key) {\r\n      if (array == null) return;\r\n      return array.sort(function (a, b) {\r\n        var x = a[key];\r\n        var y = b[key];\r\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Brings all details of a pokemon based on given indentification number\r\n     * @param {Integer} pokemonId The ID of the pokemon whose information is to be fetched\r\n     */\r\n    function getPokemonById(pokemonId) {\r\n      return Pokemon.getPokemonById(pokemonId)\r\n        .then(function (pokemonData) {\r\n          if (!pokemonData) {\r\n            return null;\r\n          }\r\n          var newPokemon = {\r\n            id: pokemonData.data.id,\r\n            idForImage: ('000' + pokemonData.data.id).slice(-3),\r\n            name: pokemonData.data.name,\r\n            abilities: pokemonData.data.abilities,\r\n            base_experience: pokemonData.data.base_experience,\r\n            height: pokemonData.data.height,\r\n            weight: pokemonData.data.weight,\r\n            descriptionUrl: pokemonData.data.species.url,\r\n            types: sortArrayByKey(pokemonData.data.types, 'slot'),\r\n            stats: pokemonData.data.stats\r\n          };\r\n          \r\n          homeVm.pokemons.push(newPokemon);\r\n          Pokemon.addPokemonToCache(newPokemon);\r\n          return homeVm.pokemons;\r\n        });\r\n    }\r\n  }\r\n})(window.angular);","(function (angular) {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('ngPokedex')\r\n    .controller('PokemonController', PokemonController);\r\n\r\n  PokemonController.$inject = ['$routeParams', 'Pokemon'];\r\n\r\n  function PokemonController($routeParams, Pokemon) {\r\n    var pVm = this;\r\n\r\n    pVm.flavor_text = null;\r\n\r\n    pVm.pokemonId = $routeParams.id;\r\n    pVm.pokemonDetails = null;\r\n\r\n    onInit();\r\n    function onInit() {\r\n\r\n      // pVm.pokemonDetails = Pokemon.getPokemonByIdLocal(pVm.pokemonId);\r\n      pVm.pokemonDetails = {\r\n        \"id\":1,\r\n        \"idForImage\":\"001\",\r\n        \"name\":\"bulbasaur\",\r\n        \"abilities\":[{\r\n          \"ability\": {\r\n            \"name\":\"chlorophyll\",\r\n            \"url\":\"https://pokeapi.co/api/v2/ability/34/\"\r\n          },\r\n          \"is_hidden\":true,\r\n          \"slot\":3\r\n        }, {\r\n          \"ability\": {\r\n            \"name\":\"overgrow\",\r\n            \"url\":\"https://pokeapi.co/api/v2/ability/65/\"\r\n          },\r\n          \"is_hidden\":false,\r\n          \"slot\":1\r\n        }],\r\n        \"base_experience\":64,\r\n        \"height\":7,\r\n        \"weight\":69,\r\n        \"descriptionUrl\": \"https://pokeapi.co/api/v2/pokemon-species/1/\",\r\n        \"types\":[{\r\n          \"slot\":1,\r\n          \"type\": {\r\n            \"name\":\"grass\",\r\n            \"url\":\"https://pokeapi.co/api/v2/type/12/\"\r\n          }\r\n        }, {\r\n          \"slot\":2,\r\n          \"type\": {\r\n            \"name\":\"poison\",\r\n            \"url\":\"https://pokeapi.co/api/v2/type/4/\"\r\n          }\r\n        }],\r\n        \"stats\": [{\r\n          \"base_stat\":45,\r\n          \"effort\":0,\r\n          \"stat\": {\r\n            \"name\":\"speed\",\r\n            \"url\":\"https://pokeapi.co/api/v2/stat/6/\"}},{\"base_stat\":65,\"effort\":0,\"stat\":{\"name\":\"special-defense\",\"url\":\"https://pokeapi.co/api/v2/stat/5/\"}},{\"base_stat\":65,\"effort\":1,\"stat\":{\"name\":\"special-attack\",\"url\":\"https://pokeapi.co/api/v2/stat/4/\"}},{\"base_stat\":49,\"effort\":0,\"stat\":{\"name\":\"defense\",\"url\":\"https://pokeapi.co/api/v2/stat/3/\"}},{\"base_stat\":49,\"effort\":0,\"stat\":{\"name\":\"attack\",\"url\":\"https://pokeapi.co/api/v2/stat/2/\"}},{\"base_stat\":45,\"effort\":0,\"stat\":{\"name\":\"hp\",\"url\":\"https://pokeapi.co/api/v2/stat/1/\"}}]\r\n      };\r\n      console.log(pVm.pokemonDetails);\r\n\r\n      if (!pVm.pokemonId) {\r\n        pVm.pokemonId = 1;\r\n      }\r\n      return getPokemonSpecies(\"https://pokeapi.co/api/v2/pokemon-species/\" + pVm.pokemonId)\r\n        .then(function (response) {\r\n          pVm.pokemonDetails.flavorText = response.flavor_text_entries[1].flavor_text || \"Not Found\";\r\n          pVm.pokemonDetails.genera = response.genera[2].genus;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calls the API url given in the parameter. Returns the description (flavor_text) only from the response\r\n     * @param {String} url The API url from where the data is to fetched\r\n     */\r\n    function getPokemonSpecies(url) {\r\n      return Pokemon.getPokemonSpecies(url)\r\n        .then(function (response) {\r\n          console.log(response);\r\n          return response.data;\r\n        });\r\n    }\r\n  }\r\n})(window.angular);","(function (angular) {\r\n    'use strict';\r\n\r\n    angular.module('shared', []);\r\n\r\n})(window.angular);","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc filter\r\n     * @name ucfirst\r\n     * @kind function\r\n     *\r\n     * @description Converts first character of a string to uppercase\r\n     * \r\n     * @Usage\r\n     * <div>{{ 'string' | ucfirst }}</div>\r\n     * \r\n     * @Output\r\n     * <div>String<div>\r\n     */\r\n    angular.module('shared')\r\n        .filter('ucfirst', ucfirstFilter);\r\n\r\n    function ucfirstFilter() {\r\n        return function (input) {\r\n            if (!input) return;\r\n            return input\r\n                .split(' ')\r\n                .map(function (ch) {\r\n                    return ch.charAt(0).toUpperCase() + ch.substring(1);\r\n                })\r\n                .join(' ');\r\n        }\r\n    }\r\n})();","(function (angular) {\r\n\r\n  'use strict';\r\n\r\n  function AppHeaderController() {\r\n    var appHeaderVm = this;\r\n    appHeaderVm.appName = 'ngPokedex';\r\n    appHeaderVm.showAboutUs = false;\r\n\r\n    appHeaderVm.toggleAboutUs = toggleAboutUs;\r\n\r\n    function toggleAboutUs() {\r\n      return appHeaderVm.showAboutUs = !appHeaderVm.showAboutUs;\r\n    };\r\n  }\r\n\r\n  angular\r\n    .module('shared')\r\n    .component('appHeader', {\r\n      templateUrl: 'src/shared/header/header.view.html',\r\n      controller: AppHeaderController,\r\n      controllerAs: 'appHeaderVm'\r\n    });\r\n\r\n})(window.angular);","(function (angular) {\r\n    'use strict';\r\n    angular.module('core', []);\r\n})(window.angular);","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('core')\r\n    .factory('Pokemon', Pokemon);\r\n\r\n  Pokemon.$inject = ['$http'];\r\n\r\n  function Pokemon($http) {\r\n\r\n    var pokemons = [];\r\n\r\n    return {\r\n      // getPokemonsByOffset: getPokemonsByOffset,\r\n      getPokemonById: getPokemonById,\r\n      getPokemonSpecies: getPokemonSpecies,\r\n      getCachedPokemons: getCachedPokemons,\r\n      getPokemonByIdLocal: getPokemonByIdLocal,\r\n      addPokemonToCache: addPokemonToCache\r\n    };\r\n\r\n    function addPokemonToCache(pokemonObj) {\r\n      if (pokemonObj) {\r\n        pokemons.push(pokemonObj);\r\n      }\r\n      return;\r\n    }\r\n\r\n    function getCachedPokemons() {\r\n      return pokemons;\r\n    }\r\n\r\n    function getPokemonSpecies(url) {\r\n      if (!url) return;\r\n\r\n      return $http.get(url)\r\n        .then(requestComplete)\r\n        .catch(requestFailed);\r\n    }\r\n\r\n    function getPokemonByIdLocal(id) {\r\n      id = parseInt(id, 10);\r\n      \r\n      if (pokemons.length < 1) {\r\n        return null;\r\n      }\r\n\r\n      var searchedPokemon = pokemons.filter(function (pokemon) {\r\n        return id === pokemon.id;\r\n      });\r\n\r\n      return searchedPokemon;\r\n    }\r\n\r\n    function getPokemonById(id) {\r\n      if (!id) return;\r\n\r\n      var apiUrl = \"https://pokeapi.co/api/v2/pokemon/\" + id + \"/\";\r\n     \r\n      return $http.get(apiUrl)\r\n        .then(function (response) {\r\n          return response;\r\n        })\r\n        .catch(requestFailed);\r\n    }\r\n\r\n    /**\r\n     * Get the list of pokemons based on offset\r\n     * @param {Integer} offset The offset from where to start getting the data\r\n     */\r\n    // function getPokemonsByOffset(url) {\r\n    //   var apiUrl = url || \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=12\";\r\n\r\n    //   return $http.get(apiUrl)\r\n    //     .then(requestComplete)\r\n    //     .catch(requestFailed);\r\n    // }\r\n\r\n    function requestComplete(response) {\r\n      return response;\r\n    }\r\n\r\n    function requestFailed(error) {\r\n      console.log('XHR Failed for getPokemons.' + error.data);\r\n    }\r\n  }\r\n})();"]}