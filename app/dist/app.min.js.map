{"version":3,"sources":["app.config.js","app.module.js","home/home.controller.js","shared.module.js","filters/ucFirst.filter.js","header/header.component.js","core.module.js","pokemon.service.js"],"names":["config","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","window","angular","module","HomeController","Pokemon","homeVm","this","loading","pokemons","nextDataSetUrl","pokemonIndex","getPokemonSpecies","url","then","response","flavor_text_entries","flavor_text","getPokemons","fromIndex","toIndex","index","pokemonId","getPokemonById","pokemonData","data","push","id","idForImage","slice","name","abilities","base_experience","height","weight","descriptionUrl","species","types","array","key","sort","a","b","x","y","sortArrayByKey","stats","$inject","filter","input","split","map","ch","charAt","toUpperCase","substring","join","component","appName","search","$http","apiUrl","get","catch","requestFailed","requestComplete","getCachedPokemons","error","console","log","factory"],"mappings":"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","file":"app.min.js","sourcesContent":["angular\r\n  .module('ngPokedex')\r\n  .config(config);\r\n\r\nfunction config($routeProvider) {\r\n  $routeProvider\r\n    .when('/pokemons', {\r\n      templateUrl: 'src/components/home/home.view.html',\r\n      controller: 'HomeController',\r\n      controllerAs: 'homeVm'\r\n    })\r\n    .when('/pokemons/:id', {\r\n      templateUrl: 'src/components/pokemon/pokemon.view.html',\r\n      controller: 'PokemonController',\r\n      controllerAs: 'pVm'\r\n    })\r\n    .otherwise('/pokemons');\r\n}\r\n","(function (angular) {\r\n    'use strict';\r\n    angular.module('ngPokedex', [\r\n        'ngRoute',\r\n        'core',\r\n        'shared'\r\n    ]);\r\n})(window.angular);\r\n","(function (angular) {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('ngPokedex')\r\n    .controller('HomeController', HomeController);\r\n\r\n  HomeController.$inject = ['Pokemon'];\r\n\r\n  function HomeController(Pokemon) {\r\n    var homeVm = this;\r\n\r\n    /** {Boolean} Flag to mantain the status of busy indicator */\r\n    homeVm.loading = false;\r\n\r\n    /** {Array<objects>} Stores the data of pokemons */\r\n    homeVm.pokemons = [];\r\n\r\n\r\n    homeVm.nextDataSetUrl = null;\r\n    homeVm.pokemonIndex = 1;\r\n\r\n    // method bindings\r\n    homeVm.getPokemonSpecies = getPokemonSpecies;\r\n    // homeVm.getPokemonsByOffset = getPokemonsByOffset;\r\n    homeVm.getPokemons = getPokemons;\r\n\r\n    onInit();\r\n    function onInit() {\r\n      // start the loading indicator\r\n      homeVm.loading = true;\r\n      return homeVm.getPokemons(homeVm.pokemonIndex, homeVm.pokemonIndex + 9);\r\n    }\r\n\r\n    /**\r\n     * Lopps through the given index range calls `getPokemonById` method for each loop\r\n     * @param {Integer} fromIndex The start of the offset for the API\r\n     * @param {Integer} toIndex   The end of the offset for the API\r\n     */\r\n    function getPokemons(fromIndex, toIndex) {\r\n      toIndex = toIndex ? toIndex : fromIndex + 9;\r\n      for (var index = fromIndex; index < toIndex; index++) {\r\n        getPokemonById(index);\r\n        homeVm.pokemonIndex++;\r\n      }\r\n      homeVm.loading = false;\r\n    }\r\n\r\n    /**\r\n     * Sorts any array based on the given key name\r\n     * @param {Array} array The array to sort\r\n     * @param {String} key  The name of the key based on which the `array` is to be sorted\r\n     */\r\n    function sortArrayByKey(array, key) {\r\n      if (array == null) return;\r\n      return array.sort(function (a, b) {\r\n        var x = a[key];\r\n        var y = b[key];\r\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Brings all details of a pokemon based on given indentification number\r\n     * @param {Integer} pokemonId The ID of the pokemon whose information is to be fetched\r\n     */\r\n    function getPokemonById(pokemonId) {\r\n      return Pokemon.getPokemonById(pokemonId)\r\n        .then(function (pokemonData) {\r\n          var data = pokemonData.data;\r\n          homeVm.pokemons.push({\r\n            id: data.id,\r\n            idForImage: ('000' + data.id).slice(-3),\r\n            name: data.name,\r\n            abilities: data.abilities,\r\n            base_experience: data.base_experience,\r\n            height: data.height,\r\n            weight: data.weight,\r\n            descriptionUrl: data.species.url,\r\n            types: sortArrayByKey(data.types, 'slot'),\r\n            stats: data.stats\r\n          });\r\n\r\n          return homeVm.pokemons;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calls the API url given in the parameter. Returns the description (flavor_text) only from the response\r\n     * @param {String} url The API url from where the data is to fetched\r\n     */\r\n    function getPokemonSpecies(url) {\r\n      return Pokemon.getPokemonSpecies(url)\r\n        .then(function (response) {\r\n          return response.flavor_text_entries[1].flavor_text || \"Not Found\";\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets a list of pokemons from the POKEDEX API\r\n     * @param {String} dataUrl The url to get pokemons with the correct values of offset and limit\r\n     */\r\n    // function getPokemonsByOffset(dataUrl) {\r\n    //   return Pokemon.getPokemonsByOffset(dataUrl)\r\n    //     .then(function (response) {\r\n    //       homeVm.loading = false;\r\n    //       return response;\r\n    //     });\r\n    // }\r\n  }\r\n})(window.angular);","(function (angular) {\r\n    'use strict';\r\n\r\n    angular.module('shared', []);\r\n\r\n})(window.angular);","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc filter\r\n     * @name ucfirst\r\n     * @kind function\r\n     *\r\n     * @description Converts first character of a string to uppercase\r\n     * \r\n     * @Usage\r\n     * <div>{{ 'string' | ucfirst }}</div>\r\n     * \r\n     * @Output\r\n     * <div>String<div>\r\n     */\r\n    angular.module('shared')\r\n        .filter('ucfirst', ucfirstFilter);\r\n\r\n    function ucfirstFilter() {\r\n        return function (input) {\r\n            if (!input) return;\r\n            return input\r\n                .split(' ')\r\n                .map(function (ch) {\r\n                    return ch.charAt(0).toUpperCase() + ch.substring(1);\r\n                })\r\n                .join(' ');\r\n        }\r\n    }\r\n})();","(function (angular) {\r\n\r\n  'use strict';\r\n\r\n  function AppHeaderController() {\r\n    var appHeaderVm = this;\r\n    appHeaderVm.appName = 'ngPokedex';\r\n    appHeaderVm.search = null;\r\n  }\r\n\r\n  angular\r\n    .module('shared')\r\n    .component('appHeader', {\r\n      templateUrl: 'src/shared/header/header.view.html',\r\n      controller: AppHeaderController,\r\n      controllerAs: 'appHeaderVm'\r\n    });\r\n\r\n})(window.angular);","(function (angular) {\r\n    'use strict';\r\n    angular.module('core', []);\r\n})(window.angular);","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('core')\r\n    .factory('Pokemon', Pokemon);\r\n\r\n  Pokemon.$inject = ['$http'];\r\n\r\n  function Pokemon($http) {\r\n\r\n    var pokemons = [];\r\n\r\n    return {\r\n      // getPokemonsByOffset: getPokemonsByOffset,\r\n      getPokemonById: getPokemonById,\r\n      getPokemonSpecies: getPokemonSpecies,\r\n      getCachedPokemons: getCachedPokemons\r\n    };\r\n\r\n    function getCachedPokemons() {\r\n      return pokemons;\r\n    }\r\n\r\n    function getPokemonSpecies(url) {\r\n      if (!url) return;\r\n\r\n      return $http.get(url)\r\n        .then(requestComplete)\r\n        .catch(requestFailed);\r\n    }\r\n\r\n    function getPokemonById(id) {\r\n      if (!id) return;\r\n\r\n      var apiUrl = \"https://pokeapi.co/api/v2/pokemon/\" + id + \"/\";\r\n     \r\n      return $http.get(apiUrl)\r\n        .then(function (response) {\r\n          pokemons.push(response);\r\n          return response;\r\n        })\r\n        .catch(requestFailed);\r\n    }\r\n\r\n    /**\r\n     * Get the list of pokemons based on offset\r\n     * @param {Integer} offset The offset from where to start getting the data\r\n     */\r\n    // function getPokemonsByOffset(url) {\r\n    //   var apiUrl = url || \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=12\";\r\n\r\n    //   return $http.get(apiUrl)\r\n    //     .then(requestComplete)\r\n    //     .catch(requestFailed);\r\n    // }\r\n\r\n    function requestComplete(response) {\r\n      return response;\r\n    }\r\n\r\n    function requestFailed(error) {\r\n      console.log('XHR Failed for getPokemons.' + error.data);\r\n    }\r\n  }\r\n})();"]}